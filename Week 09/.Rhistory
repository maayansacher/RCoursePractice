#R course for beginners
# Week 9
# Assignment by Maayan Sacher, ID 302308283
#Ctrl + Shift + F10 to restart the R session (clear workspace and packages)
#Ctrl + L to clear the console.
#### CREATE DATAFRAME ----
N = 200
subject = seq_len(N)  # מספר נבדק can also use seq(1:N)
age = sample(18:60, N, replace = TRUE) #can also use age = runif(N, 18, 60)
gender = factor(
sample(c("Male", "Female", "Other"), N, replace = TRUE),
levels = c("Male", "Female", "Other")
)
#can also use this for the gender (if dont' want to use levels) - gender = factor(sample(c("Male", "Female", "Other"), N, replace = TRUE))
avg_response_time = runif(N, 200, 6000)
depression = runif(N, 0, 100)
sleep = runif(N, 2, 12)
df <- data.frame(
subject = subject,
age = age,
gender = gender,
avg_response_time = avg_response_time,
depression = depression,
sleep = sleep
)
print(head(df))
#save
save(data, file = "./data/df.rdataHW09A")
#
describe_data <- function(df) {
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) %in% c("factor", "character")) {
# חישוב שכיחות הרמות (frequency)
level_counts <- as.data.frame(table(column))
colnames(level_counts) <- c("Level", "Count")  # שמות העמודות
results[[col_name]] <- level_counts  # שמירה ברשימת התוצאות
} else if (class(column) %in% c("numeric", "integer")) {
# חישוב סטטיסטיקה תיאורית למשתנים רציפים
stats <- data.frame(
Min = min(column, na.rm = TRUE),
Max = max(column, na.rm = TRUE),
Mean = mean(column, na.rm = TRUE),
SD = sd(column, na.rm = TRUE)
)
results[[col_name]] <- stats  # שמירה ברשימת התוצאות
}
}
# החזרת התוצאות כ-Data Frame
return(results)
}
describe_data(df)
source("functions.R")
describe_data <- function(df) {
if (nrow(df) < 10) {
stop("data is too short") #תנאי שבו אם הנתונים כוללים פחות מ-10 תצפיות הפונקציה מחזירה הודעת שגיאה "data is too short"
}
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) %in% c("factor", "character")) {
# חישוב שכיחות הרמות (frequency)
level_counts <- as.data.frame(table(column))
colnames(level_counts) <- c("Level", "Count")  # שמות העמודות
results[[col_name]] <- level_counts  # שמירה ברשימת התוצאות
} else if (class(column) %in% c("numeric", "integer")) {
# חישוב סטטיסטיקה תיאורית למשתנים רציפים
stats <- data.frame(
Min = min(column, na.rm = TRUE),
Max = max(column, na.rm = TRUE),
Mean = mean(column, na.rm = TRUE),
SD = sd(column, na.rm = TRUE)
)
results[[col_name]] <- stats  # שמירה ברשימת התוצאות
}
}
# החזרת התוצאות כ-Data Frame
return(results)
}
describe_data(df)
#
describe_data <- function(df) {
if (nrow(df) < 10) {
stop("data is too short") #תנאי שבו אם הנתונים כוללים פחות מ-10 תצפיות הפונקציה מחזירה הודעת שגיאה "data is too short"
}
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) |>in|> c("factor", "character")) {
#
describe_data <- function(df) {
if (nrow(df) < 10) {
stop("data is too short") #תנאי שבו אם הנתונים כוללים פחות מ-10 תצפיות הפונקציה מחזירה הודעת שגיאה "data is too short"
}
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) %in% c("factor", "character")) {
# חישוב שכיחות הרמות (frequency)
level_counts <- as.data.frame(table(column))
colnames(level_counts) <- c("Level", "Count")  # שמות העמודות
results[[col_name]] <- level_counts  # שמירה ברשימת התוצאות
} else if (class(column) %in% c("numeric", "integer")) {
# חישוב סטטיסטיקה תיאורית למשתנים רציפים
stats <- data.frame(
Min = min(column, na.rm = TRUE),
Max = max(column, na.rm = TRUE),
Mean = mean(column, na.rm = TRUE),
SD = sd(column, na.rm = TRUE)
)
results[[col_name]] <- stats  # שמירה ברשימת התוצאות
}
}
describe_data <- function(df) {
if (nrow(df) < 10) {
stop("data is too short") #תנאי שבו אם הנתונים כוללים פחות מ-10 תצפיות הפונקציה מחזירה הודעת שגיאה "data is too short"
}
df <- df[df$subject >= subject_start & df$subject <= subject_end, ]
if (nrow(df) == 0) {
stop("No data in the specified range of subjects")
}
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) %in% c("factor", "character")) {
# חישוב שכיחות הרמות (frequency)
level_counts <- as.data.frame(table(column))
colnames(level_counts) <- c("Level", "Count")  # שמות העמודות
results[[col_name]] <- level_counts  # שמירה ברשימת התוצאות
} else if (class(column) %in% c("numeric", "integer")) {
# חישוב סטטיסטיקה תיאורית למשתנים רציפים
stats <- data.frame(
Min = min(column, na.rm = TRUE),
Max = max(column, na.rm = TRUE),
Mean = mean(column, na.rm = TRUE),
SD = sd(column, na.rm = TRUE)
)
results[[col_name]] <- stats  # שמירה ברשימת התוצאות
}
}
# החזרת התוצאות כ-Data Frame
return(results)
describe_data(df)
####הוספת תנעי- ####עוד הוספה של תאני: לפלוט את הסטטיסטיקה התאורית רק עבור נבדקים בטווח המוגדר על ידי מספר הנבדקים שניתנו----
describe_data <- function(df) {
if (nrow(df) < 10) {
stop("data is too short") #תנאי שבו אם הנתונים כוללים פחות מ-10 תצפיות הפונקציה מחזירה הודעת שגיאה "data is too short"
}
df <- df[df$subject >= subject_start & df$subject <= subject_end, ]
if (nrow(df) == 0) {
stop("No data in the specified range of subjects")
}
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) %in% c("factor", "character")) {
# חישוב שכיחות הרמות (frequency)
level_counts <- as.data.frame(table(column))
colnames(level_counts) <- c("Level", "Count")  # שמות העמודות
results[[col_name]] <- level_counts  # שמירה ברשימת התוצאות
} else if (class(column) %in% c("numeric", "integer")) {
# חישוב סטטיסטיקה תיאורית למשתנים רציפים
stats <- data.frame(
Min = min(column, na.rm = TRUE),
Max = max(column, na.rm = TRUE),
Mean = mean(column, na.rm = TRUE),
SD = sd(column, na.rm = TRUE)
)
results[[col_name]] <- stats  # שמירה ברשימת התוצאות
}
}
# החזרת התוצאות כ-Data Frame
return(results)
}
if (nrow(df) == 0) {
stop("No data in the specified range of subjects")
}
describe_data(df)
describe_data <- function(df) {
if (nrow(df) < 10) {
stop("data is too short") #תנאי שבו אם הנתונים כוללים פחות מ-10 תצפיות הפונקציה מחזירה הודעת שגיאה "data is too short"
}
df <- df[df$subject >= subject_start & df$subject <= subject_end, ]
if (nrow(df) == 0) {
stop("No data in the specified range of subjects")
}
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) %in% c("factor", "character")) {
# חישוב שכיחות הרמות (frequency)
level_counts <- as.data.frame(table(column))
colnames(level_counts) <- c("Level", "Count")  # שמות העמודות
results[[col_name]] <- level_counts  # שמירה ברשימת התוצאות
} else if (class(column) %in% c("numeric", "integer")) {
# חישוב סטטיסטיקה תיאורית למשתנים רציפים
stats <- data.frame(
Min = min(column, na.rm = TRUE),
Max = max(column, na.rm = TRUE),
Mean = mean(column, na.rm = TRUE),
SD = sd(column, na.rm = TRUE)
)
results[[col_name]] <- stats  # שמירה ברשימת התוצאות
}
}
# החזרת התוצאות כ-Data Frame
return(results)
}
describe_data(df)
print(results)
View(results)
describe_data <- function(df) {
if (nrow(df) < 10) {
stop("data is too short") #תנאי שבו אם הנתונים כוללים פחות מ-10 תצפיות הפונקציה מחזירה הודעת שגיאה "data is too short"
}
df <- df[df$subject >= subject_start & df$subject <= subject_end, ]
if (nrow(df) == 0) {
stop("No data in the specified range of subjects")
}
results <- list()
for (col_name in colnames(df)) {
column <- df[[col_name]]
if (class(column) %in% c("factor", "character")) {
# חישוב שכיחות הרמות (frequency)
level_counts <- as.data.frame(table(column))
colnames(level_counts) <- c("Level", "Count")  # שמות העמודות
results[[col_name]] <- level_counts  # שמירה ברשימת התוצאות
} else if (class(column) %in% c("numeric", "integer")) {
# חישוב סטטיסטיקה תיאורית למשתנים רציפים
stats <- data.frame(
Min = min(column, na.rm = TRUE),
Max = max(column, na.rm = TRUE),
Mean = mean(column, na.rm = TRUE),
SD = sd(column, na.rm = TRUE)
)
results[[col_name]] <- stats  # שמירה ברשימת התוצאות
}
}
# החזרת התוצאות כ-Data Frame
return(results)
}
describe_data(df)
View(describe_data)
View(describe_data)
#R course for beginners
# Week 9
# Assignment by Maayan Sacher, ID 302308283
#Ctrl + Shift + F10 to restart the R session (clear workspace and packages)
#Ctrl + L to clear the console.
#### CREATE DATAFRAME ----
N = 200
subject = seq_len(N)  # מספר נבדק can also use seq(1:N)
age = sample(18:60, N, replace = TRUE) #can also use age = runif(N, 18, 60)
gender = factor(
sample(c("Male", "Female", "Other"), N, replace = TRUE),
levels = c("Male", "Female", "Other")
)
#can also use this for the gender (if dont' want to use levels) - gender = factor(sample(c("Male", "Female", "Other"), N, replace = TRUE))
avg_response_time = runif(N, 200, 6000)
depression = runif(N, 0, 100)
sleep = runif(N, 2, 12)
df <- data.frame(
subject = subject,
age = age,
gender = gender,
avg_response_time = avg_response_time,
depression = depression,
sleep = sleep
)
print(head(df))
####שימוש בפונקציה----
source("functions.R")
print(results)
