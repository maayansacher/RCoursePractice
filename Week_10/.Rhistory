library(readr)
library(tidyverse)
# retrieve file
df <- read_csv("Titanic.csv")
#gender factor
df = df |> mutate(gender = factor(Sex))
contrasts(df$gender) <- c(1,0)
contrasts(df$gender)
contrasts(df$gender)
summary(df)
contrasts(df$class) <- c(1,0)
df = df |> mutate(class = factor(class))
df = df |> mutate(class_factor = factor(class))
contrasts(df$class_factor) <- c(1,0)
contrasts(df$class_factor)
df$class_factor <- ifelse(df$class == 1, "First", "Other")
df$Class_factor <- ifelse(df$class == 1, "First", "Other")
df = df |> mutate(class_factor = factor(Class))
df$Class_factor <- ifelse(df$class == 1, "First", "Other")
colname(df)
colname(df)
colnames(df)
df$class_factor <- ifelse(df$PClass == 1, "First", "Other")
df$class_factor <- factor(df$PClass_factor, levels = c("First", "Other"))
df = df |> mutate(class_factor = factor(PClass))
summary_table <- df |>
group_by(PClass, gender) |>
summarise(
Total = n(),
Survived = sum(survived == "Survived"),
Survival_Rate = round(100 * mean(survived == "Survived"), 2)
) |>
ungroup()
print(summary.table)
set.seed(123)
x <- rnorm(100)                     # משתנה בלתי תלוי
y <- 5 + 3 * x + rnorm(100, sd = 2) # משתנה תלוי עם רעש גאוסייני
# התאמה עם lm (רגרסיה לינארית רגילה)
model_lm <- lm(y ~ x)
# התאמה עם glm (עם family = gaussian)
model_glm <- glm(y ~ x, family = gaussian())
# השוואת התוצאות
summary(model_lm) # סיכום המודל עם lm
summary(model_glm) # סיכום המודל עם glm
####family=gaussian: glm for family=gaussian is the same as lm----
# יצירת נתוני דוגמה
set.seed(123)
x <- rnorm(100)                     # משתנה בלתי תלוי
y <- 5 + 3 * x + rnorm(100, sd = 2) # משתנה תלוי עם רעש גאוסייני
# התאמה עם lm (רגרסיה לינארית רגילה)
model_lm <- lm(y ~ x)
# התאמה עם glm (עם family = gaussian)
model_glm <- glm(y ~ x, family = gaussian())
# השוואת התוצאות
summary(model_lm) # סיכום המודל עם lm
summary(model_glm) # סיכום המודל עם glm
####logistical model for glm----
# רגרסיה לוגיסטית עם glm
logistic_model <- glm(survived ~ PClass + gender,
data = df,
family = binomial()) # family = binomial מגדיר רגרסיה לוגיסטית
#ANOTHER EXAMPLE WITH GLM FOR LOGITTIC
# יצירת נתונים מלאכותיים
set.seed(123)
n <- 200
hours <- rnorm(n, mean = 5, sd = 2)            # שעות לימוד (ממוצע 5, סטיית תקן 2)
gender <- sample(c("male", "female"), n, replace = TRUE) # מגדר
pass <- rbinom(n, 1, prob = plogis(0.5 * hours + ifelse(gender == "female", 1, -1))) # משתנה בינארי: הצלחה
df_new <- data.frame(hours = hours, gender = gender, pass = pass)
head(df_new) # הצצה לנתונים
logistic_model_new <- glm(pass ~ hours + gender,
data = df_new,
family = binomial())
summary(logistic_model_new)
logistic_model <- glm(pass ~ hours + gender, data = df_new, family = binomial())
summary(logistic_model)
coef(logistic_model)
exp(coef(logistic_model))
hours <- c(2, 3, 5, 7, 1, 4)  # משתנה בלתי תלוי
pass <- c(0, 0, 1, 1, 0, 1)   # משתנה תלוי (0 = לא עבר, 1 = עבר)
# התאמת מודל רגרסיה לוגיסטית
logistic_model <- glm(pass ~ hours, family = binomial())
# הצגת סיכום המודל
summary(logistic_model)
predicted_probs <- predict(logistic_model, type = "response") #מפעיל את המודל ומחשב תחזיות לכל תצפית בנתונים.
print(predicted_probs)#מציג את ההסתברויות החזויות עבור כל תצפית.
install.packages("pROC")
library(pROC)
roc_curve <- roc(pass, predicted_probs) # pass = תוצאה אמיתית, predicted_probs = הסתברויות חזויות
auc_value <- auc(roc_curve)             # חישוב ה-AUC מתוך עקומת ה-ROC
print(auc_value)
plot(roc_curve, col = "blue", main = "ROC Curve", lwd = 2)
abline(a = 0, b = 1, col = "red", lty = 2)
plot(roc_curve, col = "blue", main = "ROC Curve", lwd = 2, legacy.axes = TRUE)
# הוספת קו אלכסוני (מודל אקראי להשוואה)
abline(a = 0, b = 1, col = "red", lty = 2)
plot(roc_curve, col = "blue", main = "ROC Curve", lwd = 2, legacy.axes = TRUE)
abline(a = 0, b = 1, col = "red", lty = 2)
